(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{234:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/brettwooldridge/HikariCP",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方 GitHub 地址"),a("OutboundLink")],1)]),t._v(" "),t._m(3),t._v(" "),a("p",[t._v("传说中 BoneCP 在快速这个特点上做到了极致，官方数据是 C3P0 等的 25 倍左右。")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),a("p",[t._v("几个连接池的代码量对比（代码量越少，一般意味着执行效率越高、发生 BUG 的可能性越低）")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),a("p",[t._v("另外，关于可靠性方面，也是有实验和数据支持的。对于数据库连接中断的情况，通过测试 getConnection()，各种 CP 的不相同处理方法如下（所有 CP 都配置了跟 connectionTimeout 类似的参数为 5 秒钟）")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"spring-boot-整合-hikaricp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-整合-hikaricp"}},[this._v("#")]),this._v(" Spring Boot 整合 HikariCP")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"什么是-hikaricp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-hikaricp"}},[this._v("#")]),this._v(" 什么是 HikariCP")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("HiKariCP 是数据库连接池的一个后起之秀，号称性能最好，可以完美地 PK 掉其他连接池。是一个高性能的 JDBC 连接池，基于 BoneCP 做了不少的改进和优化。超快，快到连 Spring Boot 2 都宣布支持了。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"什么是-bonecp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-bonecp"}},[this._v("#")]),this._v(" 什么是 BoneCP")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"为什么需要-hikaricp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要-hikaricp"}},[this._v("#")]),this._v(" 为什么需要 HikariCP")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("BoneCP 作者放弃维护，并在 Github 项目主页推荐大家使用 HikariCP，Hikari（ひかり[shi ga li]） 来自日文，是 光 的意思。这个产品的口号是 快速、简单、可靠")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[this._v("#")]),this._v(" 优化")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ul",[a("li",[t._v("字节码精简 ： 优化代码，直到编译后的字节码最少，这样，CPU 缓存可以加载更多的程序代码")]),t._v(" "),a("li",[t._v("优化代理和拦截器 ： 减少代码，例如 HikariCP 的 Statement proxy 只有 100 行代码，只有 BoneCP 的十分之一")]),t._v(" "),a("li",[t._v("自定义数组类型（FastStatementList）代替 ArrayList ： 避免每次 get() 调用都要进行 range check，避免调用 remove() 时的从头到尾的扫描")]),t._v(" "),a("li",[t._v("自定义集合类型（ConcurrentBag）： 提高并发读写的效率")]),t._v(" "),a("li",[t._v("其他针对 BoneCP 缺陷的优化： 比如对于耗时超过一个 CPU 时间片的方法调用的研究（但没说具体怎么优化）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"代码量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码量"}},[this._v("#")]),this._v(" 代码量")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("table",[a("thead",[a("tr",[a("th",[t._v("Pool")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Files")]),t._v(" "),a("th",{staticStyle:{"text-align":"right"}},[t._v("Code")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Vibur")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("34")]),t._v(" "),a("td",{staticStyle:{"text-align":"right"}},[t._v("1927")])]),t._v(" "),a("tr",[a("td",[t._v("HikariCP")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("21")]),t._v(" "),a("td",{staticStyle:{"text-align":"right"}},[t._v("2228")])]),t._v(" "),a("tr",[a("td",[t._v("Tomcat")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("31")]),t._v(" "),a("td",{staticStyle:{"text-align":"right"}},[t._v("6345")])]),t._v(" "),a("tr",[a("td",[t._v("BoneCP")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("49")]),t._v(" "),a("td",{staticStyle:{"text-align":"right"}},[t._v("7293")])]),t._v(" "),a("tr",[a("td",[t._v("C3P0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("120")]),t._v(" "),a("td",{staticStyle:{"text-align":"right"}},[t._v("15550")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"可靠性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可靠性"}},[this._v("#")]),this._v(" 可靠性")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("HikariCP(A)： 等待 5 秒钟后，如果连接还是没有恢复，则抛出一个 SQLExceptions 异常；后续的 getConnection() 也是一样处理")]),this._v(" "),e("li",[this._v("C3P0(C-)： 完全没有反应，没有提示，也不会在 CheckoutTimeout 配置的时长超时后有任何通知给调用者；然后等待 2 分钟后终于醒来了，返回一个 error")]),this._v(" "),e("li",[this._v("Tomcat(F)： 返回一个 connection，然后调用者如果利用这个无效的 connection 执行 SQL 语句 结果可想而知；大约 55 秒之后终于醒来了，这时候的 getConnection() 终于可以返回一个 error，但没有等待参数配置的 5 秒钟，而是立即返回 error")]),this._v(" "),e("li",[this._v("BoneCP(C)： 跟 Tomcat 的处理方法一样；也是大约 55 秒之后才醒来，有了正常的反应，并且终于会等待 5 秒钟之后返回 error 了")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"整合-hikaricp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整合-hikaricp"}},[this._v("#")]),this._v(" 整合 HikariCP")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"pom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pom"}},[this._v("#")]),this._v(" pom")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\x3c!-- 主要增加 HikariCP 依赖 --\x3e\n<dependency>\n    <groupId>com.zaxxer</groupId>\n    <artifactId>HikariCP</artifactId>\n    <version>${hikaricp.version}</version>\n</dependency>\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-jdbc</artifactId>\n    <exclusions>\n        \x3c!-- 排除 tomcat-jdbc 以使用 HikariCP --\x3e\n        <exclusion>\n            <groupId>org.apache.tomcat</groupId>\n            <artifactId>tomcat-jdbc</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n\x3c!-- MySQL 驱动 --\x3e\n<dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n    <version>${mysql.version}</version>\n</dependency>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"application-yml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application-yml"}},[this._v("#")]),this._v(" application.yml")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.zaxxer.hikari.HikariDataSource\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver-class-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.mysql.cj.jdbc.Driver\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//192.168.141.130"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3306/myshop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("useUnicode=true"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&characterEncoding=utf-8&useSSL=false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hikari")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("minimum-idle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("idle-timeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("600000")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maximum-pool-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("auto-commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pool-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MyHikariCP\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max-lifetime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1800000")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("connection-timeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30000")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("connection-test-query")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SELECT 1\n")])])])}],!1,null,null,null);e.default=n.exports}}]);