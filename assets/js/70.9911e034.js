(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{235:function(a,t,e){"use strict";e.r(t);var n=e(0),s=Object(n.a)({},(function(){var a=this.$createElement;this._self._c;return this._m(0)}),[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"spring-boot-整合-tkmybatis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-整合-tkmybatis"}},[a._v("#")]),a._v(" Spring Boot 整合 TkMyBatis")]),a._v(" "),e("h2",{attrs:{id:"什么是-tkmybatis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-tkmybatis"}},[a._v("#")]),a._v(" 什么是 TkMyBatis")]),a._v(" "),e("blockquote",[e("p",[a._v("tk.mybatis 是在 MyBatis 框架的基础上提供了很多工具，让开发更加高效")])]),a._v(" "),e("h3",{attrs:{id:"pom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pom"}},[a._v("#")]),a._v(" POM")]),a._v(" "),e("p",[a._v("在"),e("code",[a._v("pom.xml")]),a._v("文件中引入"),e("code",[a._v("mapper-spring-boot-starter")]),a._v("依赖，该依赖会自动引入"),e("code",[a._v("MyBaits")]),a._v("相关依赖")]),a._v(" "),e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("tk.mybatis"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("mapper-spring-boot-starter"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("2.1.5"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),e("h3",{attrs:{id:"application-yml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application-yml"}},[a._v("#")]),a._v(" application.yml")]),a._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mybatis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 实体类的存放路径")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type-aliases-package")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" com.funtl.hello.spring.boot.domain\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mapper-locations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" classpath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("mapper/"),e("span",{pre:!0,attrs:{class:"token important"}},[a._v("*.xml")]),a._v("\n")])])]),e("h3",{attrs:{id:"创建通用父级接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建通用父级接口"}},[a._v("#")]),a._v(" 创建通用父级接口")]),a._v(" "),e("p",[a._v("主要作用是让"),e("code",[a._v("DAO")]),a._v("层的接口继承该接口，以达到使用"),e("code",[a._v("tk.mybatis")]),a._v("的目的")]),a._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("tk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mybatis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mapper")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("tk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mybatis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mapper"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("common"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Mapper")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("tk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mybatis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mapper"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("common"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MySqlMapper")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * 自己的 Mapper\n * 特别注意，该接口不能被扫描到，否则会出错\n * <p>Title: MyMapper</p>\n * <p>Description: </p>\n *\n * @author Lusifer\n * @version 1.0.0\n * @date 2018/5/29 0:57\n */")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyMapper")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Mapper")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MySqlMapper")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("h2",{attrs:{id:"什么是-pagehelper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-pagehelper"}},[a._v("#")]),a._v(" 什么是 PageHelper")]),a._v(" "),e("blockquote",[e("p",[a._v("PageHelper 是 Mybatis 的分页插件，支持多数据库、多数据源。可以简化数据库的分页查询操作，整合过程也极其简单，只需引入依赖即可。")])]),a._v(" "),e("h3",{attrs:{id:"pom-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pom-2"}},[a._v("#")]),a._v(" POM")]),a._v(" "),e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("com.github.pagehelper"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("pagehelper-spring-boot-starter"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("1.2.12"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),e("h2",{attrs:{id:"代码生成插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码生成插件"}},[a._v("#")]),a._v(" 代码生成插件")]),a._v(" "),e("p",[a._v("在 "),e("code",[a._v("pom.xml")]),a._v(" 文件中增加 "),e("code",[a._v("mybatis-generator-maven-plugin")]),a._v(" 插件")]),a._v(" "),e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("build")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("plugins")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("plugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.mybatis.generator"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("mybatis-generator-maven-plugin"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("1.3.7"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("configuration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("configurationFile")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("${basedir}/src/main/resources/generator/generatorConfig.xml"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("configurationFile")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("overwrite")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("true"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("overwrite")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("verbose")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("true"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("verbose")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("configuration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependencies")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("mysql"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("mysql-connector-java"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("${mysql.version}"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("tk.mybatis"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("mapper"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("4.1.5"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n            "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependencies")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("plugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("plugins")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("build")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),e("blockquote",[e("p",[a._v("注意： configurationFile 自动生成所需的配置文件路径")])]),a._v(" "),e("h3",{attrs:{id:"自动生成的配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动生成的配置"}},[a._v("#")]),a._v(" 自动生成的配置")]),a._v(" "),e("p",[a._v("在 "),e("code",[a._v("src/main/resources/generator/")]),a._v(" 目录下创建 "),e("code",[a._v("generatorConfig.xml")]),a._v(" 配置文件：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE generatorConfiguration\n        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"\n        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">\n<generatorConfiguration>\n    \x3c!-- 引入数据库连接配置 --\x3e\n    <properties resource="jdbc.properties"/>\n    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">\n        <property name="beginningDelimiter" value="`"/>\n        <property name="endingDelimiter" value="`"/>\n        \x3c!-- 配置 tk.mybatis 插件 --\x3e\n        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">\n            <property name="mappers" value="com.funtl.utils.MyMapper"/>\n        </plugin>\n        \x3c!-- 配置数据库连接 --\x3e\n        <jdbcConnection\n                driverClass="${jdbc.driverClass}"\n                connectionURL="${jdbc.connectionURL}"\n                userId="${jdbc.username}"\n                password="${jdbc.password}">\n        </jdbcConnection>\n        \x3c!-- 配置实体类存放路径 --\x3e\n        <javaModelGenerator targetPackage="com.funtl.hello.spring.boot.domain" targetProject="src/main/java"/>\n        \x3c!-- 配置 XML 存放路径 --\x3e\n        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources"/>\n        \x3c!-- 配置 DAO 存放路径 --\x3e\n        <javaClientGenerator\n                targetPackage="com.funtl.hello.spring.boot.mapper"\n                targetProject="src/main/java"\n                type="XMLMAPPER"/>\n        \x3c!-- 配置需要指定生成的数据库和表，% 代表所有表 --\x3e\n        <table catalog="myshop" tableName="%">\n            \x3c!-- 默认为 false，如果设置为 true，在生成的 SQL 中，table 名字不会加上 catalog 或 schema --\x3e\n            <property name="ignoreQualifiersAtRuntime" value="true"/>\n            \x3c!-- mysql 配置 --\x3e\n            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>\n        </table>\n    </context>\n</generatorConfiguration>\n')])])]),e("h3",{attrs:{id:"配置数据源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置数据源"}},[a._v("#")]),a._v(" 配置数据源")]),a._v(" "),e("p",[a._v("在 "),e("code",[a._v("src/main/resources")]),a._v(" 目录下创建 "),e("code",[a._v("jdbc.properties")]),a._v(" 数据源配置：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("jdbc.driverClass=com.mysql.cj.jdbc.Driver\njdbc.connectionURL=jdbc:mysql://192.168.141.130:3306/myshop?useUnicode=true&characterEncoding=utf-8&useSSL=false\njdbc.username=root\njdbc.password=123456\n")])])]),e("h3",{attrs:{id:"插件自动生成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件自动生成"}},[a._v("#")]),a._v(" 插件自动生成")]),a._v(" "),e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("mvn mybatis-generator:generate\n")])])]),e("h2",{attrs:{id:"附：扩展阅读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#附：扩展阅读"}},[a._v("#")]),a._v(" 附：扩展阅读")]),a._v(" "),e("h3",{attrs:{id:"完整配置案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#完整配置案例"}},[a._v("#")]),a._v(" 完整配置案例")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE generatorConfiguration\n  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"\n"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">\n\x3c!-- 配置生成器 --\x3e\n<generatorConfiguration>\n\x3c!-- 可以用于加载配置项或者配置文件，在整个配置文件中就可以使用${propertyKey}的方式来引用配置项\n    resource：配置资源加载地址，使用resource，MBG从classpath开始找，比如com/myproject/generatorConfig.properties        \n    url：配置资源加载地质，使用URL的方式，比如file:///C:/myfolder/generatorConfig.properties.\n    注意，两个属性只能选址一个;\n    另外，如果使用了mybatis-generator-maven-plugin，那么在pom.xml中定义的properties都可以直接在generatorConfig.xml中使用\n<properties resource="" url="" />\n --\x3e\n \x3c!-- 在MBG工作的时候，需要额外加载的依赖包\n     location属性指明加载jar/zip包的全路径\n<classPathEntry location="/Program Files/IBM/SQLLIB/java/db2java.zip" />\n  --\x3e\n\x3c!-- \n    context:生成一组对象的环境 \n    id:必选，上下文id，用于在生成错误时提示\n    defaultModelType:指定生成对象的样式\n        1，conditional：类似hierarchical；\n        2，flat：所有内容（主键，blob）等全部生成在一个对象中；\n        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)\n    targetRuntime:\n        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；\n        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；\n    introspectedColumnImpl：类全限定名，用于扩展MBG\n--\x3e\n<context id="mysql" defaultModelType="hierarchical" targetRuntime="MyBatis3Simple" >\n    \x3c!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；\n        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖\n     --\x3e\n    <property name="autoDelimitKeywords" value="false"/>\n    \x3c!-- 生成的Java文件的编码 --\x3e\n    <property name="javaFileEncoding" value="UTF-8"/>\n    \x3c!-- 格式化java代码 --\x3e\n    <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>\n    \x3c!-- 格式化XML代码 --\x3e\n    <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>\n    \x3c!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； --\x3e\n    <property name="beginningDelimiter" value="`"/>\n    <property name="endingDelimiter" value="`"/>\n    \x3c!-- 必须要有的，使用这个配置链接数据库\n        @TODO:是否可以扩展\n        # MySQL 8.x: com.mysql.cj.jdbc.Driver\n     --\x3e\n    <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql:///pss" userId="root" password="admin">\n        \x3c!-- 这里面可以设置property属性，每一个property属性都设置到配置的Driver上 --\x3e\n    </jdbcConnection>\n    \x3c!-- java类型处理器 \n        用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；\n        注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型； \n    --\x3e\n    <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">\n        \x3c!-- \n            true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型\n            false：默认,\n                scale>0;length>18：使用BigDecimal;\n                scale=0;length[10,18]：使用Long；\n                scale=0;length[5,9]：使用Integer；\n                scale=0;length<5：使用Short；\n         --\x3e\n        <property name="forceBigDecimals" value="false"/>\n    </javaTypeResolver>\n    \x3c!-- java模型创建器，是必须要的元素\n        负责：1，key类（见context的defaultModelType）；2，java类；3，查询类\n        targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；\n        targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录\n     --\x3e\n    <javaModelGenerator targetPackage="com._520it.mybatis.domain" targetProject="src/main/java">\n        \x3c!--  for MyBatis3/MyBatis3Simple\n            自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；\n         --\x3e\n        <property name="constructorBased" value="false"/>\n        \x3c!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --\x3e\n        <property name="enableSubPackages" value="true"/>\n        \x3c!-- for MyBatis3 / MyBatis3Simple\n            是否创建一个不可变的类，如果为true，\n            那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类\n         --\x3e\n        <property name="immutable" value="false"/>\n        \x3c!-- 设置一个根对象，\n            如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项\n            注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：\n                1，属性名相同，类型相同，有相同的getter/setter方法；\n         --\x3e\n        <property name="rootClass" value="com._520it.mybatis.domain.BaseDomain"/>\n        \x3c!-- 设置是否在getter方法中，对String类型字段调用trim()方法 --\x3e\n        <property name="trimStrings" value="true"/>\n    </javaModelGenerator>\n    \x3c!-- 生成SQL map的XML文件生成器，\n        注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），\n            或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置\n        targetPackage/targetProject:同javaModelGenerator\n     --\x3e\n    <sqlMapGenerator targetPackage="com._520it.mybatis.mapper" targetProject="src/main/resources">\n        \x3c!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --\x3e\n        <property name="enableSubPackages" value="true"/>\n    </sqlMapGenerator>\n    \x3c!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口 \n        targetPackage/targetProject:同javaModelGenerator\n        type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：\n            1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；\n            2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；\n            3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；\n        注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER\n    --\x3e\n    <javaClientGenerator targetPackage="com._520it.mybatis.mapper" type="ANNOTATEDMAPPER" targetProject="src/main/java">\n        \x3c!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --\x3e\n        <property name="enableSubPackages" value="true"/>\n        \x3c!-- 可以为所有生成的接口添加一个父接口，但是MBG只负责生成，不负责检查\n        <property name="rootInterface" value=""/>\n         --\x3e\n    </javaClientGenerator>\n    \x3c!-- 选择一个table来生成相关文件，可以有一个或多个table，必须要有table元素\n        选择的table会生成一下文件：\n        1，SQL map文件\n        2，生成一个主键类；\n        3，除了BLOB和主键的其他字段的类；\n        4，包含BLOB的类；\n        5，一个用户生成动态查询的条件类（selectByExample, deleteByExample），可选；\n        6，Mapper接口（可选）\n        tableName（必要）：要生成对象的表名；\n        注意：大小写敏感问题。正常情况下，MBG会自动的去识别数据库标识符的大小写敏感度，在一般情况下，MBG会\n            根据设置的schema，catalog或tablename去查询数据表，按照下面的流程：\n            1，如果schema，catalog或tablename中有空格，那么设置的是什么格式，就精确的使用指定的大小写格式去查询；\n            2，否则，如果数据库的标识符使用大写的，那么MBG自动把表名变成大写再查找；\n            3，否则，如果数据库的标识符使用小写的，那么MBG自动把表名变成小写再查找；\n            4，否则，使用指定的大小写格式查询；\n        另外的，如果在创建表的时候，使用的""把数据库对象规定大小写，就算数据库标识符是使用的大写，在这种情况下也会使用给定的大小写来创建表名；\n        这个时候，请设置delimitIdentifiers="true"即可保留大小写格式；\n        可选：\n        1，schema：数据库的schema；\n        2，catalog：数据库的catalog；\n        3，alias：为数据表设置的别名，如果设置了alias，那么生成的所有的SELECT SQL语句中，列名会变成：alias_actualColumnName\n        4，domainObjectName：生成的domain类的名字，如果不设置，直接使用表名作为domain类的名字；可以设置为somepck.domainName，那么会自动把domainName类再放到somepck包里面；\n        5，enableInsert（默认true）：指定是否生成insert语句；\n        6，enableSelectByPrimaryKey（默认true）：指定是否生成按照主键查询对象的语句（就是getById或get）；\n        7，enableSelectByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询语句；\n        8，enableUpdateByPrimaryKey（默认true）：指定是否生成按照主键修改对象的语句（即update)；\n        9，enableDeleteByPrimaryKey（默认true）：指定是否生成按照主键删除对象的语句（即delete）；\n        10，enableDeleteByExample（默认true）：MyBatis3Simple为false，指定是否生成动态删除语句；\n        11，enableCountByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询总条数语句（用于分页的总条数查询）；\n        12，enableUpdateByExample（默认true）：MyBatis3Simple为false，指定是否生成动态修改语句（只修改对象中不为空的属性）；\n        13，modelType：参考context元素的defaultModelType，相当于覆盖；\n        14，delimitIdentifiers：参考tableName的解释，注意，默认的delimitIdentifiers是双引号，如果类似MYSQL这样的数据库，使用的是`（反引号，那么还需要设置context的beginningDelimiter和endingDelimiter属性）\n        15，delimitAllColumns：设置是否所有生成的SQL中的列名都使用标识符引起来。默认为false，delimitIdentifiers参考context的属性\n        注意，table里面很多参数都是对javaModelGenerator，context等元素的默认属性的一个复写；\n     --\x3e\n    <table tableName="userinfo" >\n        \x3c!-- 参考 javaModelGenerator 的 constructorBased属性--\x3e\n        <property name="constructorBased" value="false"/>\n        \x3c!-- 默认为false，如果设置为true，在生成的SQL中，table名字不会加上catalog或schema； --\x3e\n        <property name="ignoreQualifiersAtRuntime" value="false"/>\n        \x3c!-- 参考 javaModelGenerator 的 immutable 属性 --\x3e\n        <property name="immutable" value="false"/>\n        \x3c!-- 指定是否只生成domain类，如果设置为true，只生成domain类，如果还配置了sqlMapGenerator，那么在mapper XML文件中，只生成resultMap元素 --\x3e\n        <property name="modelOnly" value="false"/>\n        \x3c!-- 参考 javaModelGenerator 的 rootClass 属性 \n        <property name="rootClass" value=""/>\n         --\x3e\n        \x3c!-- 参考javaClientGenerator 的  rootInterface 属性\n        <property name="rootInterface" value=""/>\n        --\x3e\n        \x3c!-- 如果设置了runtimeCatalog，那么在生成的SQL中，使用该指定的catalog，而不是table元素上的catalog \n        <property name="runtimeCatalog" value=""/>\n        --\x3e\n        \x3c!-- 如果设置了runtimeSchema，那么在生成的SQL中，使用该指定的schema，而不是table元素上的schema \n        <property name="runtimeSchema" value=""/>\n        --\x3e\n        \x3c!-- 如果设置了runtimeTableName，那么在生成的SQL中，使用该指定的tablename，而不是table元素上的tablename \n        <property name="runtimeTableName" value=""/>\n        --\x3e\n        \x3c!-- 注意，该属性只针对MyBatis3Simple有用；\n            如果选择的runtime是MyBatis3Simple，那么会生成一个SelectAll方法，如果指定了selectAllOrderByClause，那么会在该SQL中添加指定的这个order条件；\n         --\x3e\n        <property name="selectAllOrderByClause" value="age desc,username asc"/>\n        \x3c!-- 如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法，比如BORN_DATE，生成的属性名字就是BORN_DATE,而不会是bornDate --\x3e\n        <property name="useActualColumnNames" value="false"/>\n        \x3c!-- generatedKey用于生成生成主键的方法，\n            如果设置了该元素，MBG会在生成的<insert>元素中生成一条正确的<selectKey>元素，该元素可选\n            column:主键的列名；\n            sqlStatement：要生成的selectKey语句，有以下可选项：\n                Cloudscape:相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()\n                DB2       :相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()\n                DB2_MF    :相当于selectKey的SQL为：SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1\n                Derby      :相当于selectKey的SQL为：VALUES IDENTITY_VAL_LOCAL()\n                HSQLDB      :相当于selectKey的SQL为：CALL IDENTITY()\n                Informix  :相当于selectKey的SQL为：select dbinfo(\'sqlca.sqlerrd1\') from systables where tabid=1\n                MySql      :相当于selectKey的SQL为：SELECT LAST_INSERT_ID()\n                SqlServer :相当于selectKey的SQL为：SELECT SCOPE_IDENTITY()\n                SYBASE      :相当于selectKey的SQL为：SELECT @@IDENTITY\n                JDBC      :相当于在生成的insert元素上添加useGeneratedKeys="true"和keyProperty属性\n        <generatedKey column="" sqlStatement=""/>\n         --\x3e\n        \x3c!-- \n            该元素会在根据表中列名计算对象属性名之前先重命名列名，非常适合用于表中的列都有公用的前缀字符串的时候，\n            比如列名为：CUST_ID,CUST_NAME,CUST_EMAIL,CUST_ADDRESS等；\n            那么就可以设置searchString为"^CUST_"，并使用空白替换，那么生成的Customer对象中的属性名称就不是\n            custId,custName等，而是先被替换为ID,NAME,EMAIL,然后变成属性：id，name，email；\n            注意，MBG是使用java.util.regex.Matcher.replaceAll来替换searchString和replaceString的，\n            如果使用了columnOverride元素，该属性无效；\n        <columnRenamingRule searchString="" replaceString=""/>\n         --\x3e\n         \x3c!-- 用来修改表中某个列的属性，MBG会使用修改后的列来生成domain的属性；\n             column:要重新设置的列名；\n             注意，一个table元素中可以有多个columnOverride元素哈~\n          --\x3e\n         <columnOverride column="username">\n             \x3c!-- 使用property属性来指定列要生成的属性名称 --\x3e\n             <property name="property" value="userName"/>\n             \x3c!-- javaType用于指定生成的domain的属性类型，使用类型的全限定名\n             <property name="javaType" value=""/>\n              --\x3e\n             \x3c!-- jdbcType用于指定该列的JDBC类型 \n             <property name="jdbcType" value=""/>\n              --\x3e\n             \x3c!-- typeHandler 用于指定该列使用到的TypeHandler，如果要指定，配置类型处理器的全限定名\n                 注意，mybatis中，不会生成到mybatis-config.xml中的typeHandler\n                 只会生成类似：where id = #{id,jdbcType=BIGINT,typeHandler=com._520it.mybatis.MyTypeHandler}的参数描述\n             <property name="jdbcType" value=""/>\n             --\x3e\n             \x3c!-- 参考table元素的delimitAllColumns配置，默认为false\n             <property name="delimitedColumnName" value=""/>\n              --\x3e\n         </columnOverride>\n         \x3c!-- ignoreColumn设置一个MGB忽略的列，如果设置了改列，那么在生成的domain中，生成的SQL中，都不会有该列出现 \n             column:指定要忽略的列的名字；\n             delimitedColumnName：参考table元素的delimitAllColumns配置，默认为false\n             注意，一个table元素中可以有多个ignoreColumn元素\n         <ignoreColumn column="deptId" delimitedColumnName=""/>\n         --\x3e\n    </table>\n</context>\n</generatorConfiguration>\n')])])])])}],!1,null,null,null);t.default=s.exports}}]);