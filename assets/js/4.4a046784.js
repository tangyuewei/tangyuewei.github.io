(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{169:function(t,v,_){"use strict";_.r(v);var a=_(0),s=Object(a.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("div",{staticClass:"content"},[_("h1",{attrs:{id:"算法与数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算法与数据结构"}},[t._v("#")]),t._v(" 算法与数据结构")]),t._v(" "),_("h2",{attrs:{id:"算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("插入排序（直接插入排序、希尔排序）")])]),t._v(" "),_("li",[_("p",[t._v("交换排序（冒泡排序、快速排序）")])]),t._v(" "),_("li",[_("p",[t._v("选择排序（直接选择排序、堆排序）")])]),t._v(" "),_("li",[_("p",[t._v("归并排序")])]),t._v(" "),_("li",[_("p",[t._v("分配排序（基数排序）")])])]),t._v(" "),_("ul",[_("li",[_("p",[t._v("所需辅助空间最多：归并排序")])]),t._v(" "),_("li",[_("p",[t._v("所需辅助空间最少：堆排序")])]),t._v(" "),_("li",[_("p",[t._v("平均速度最快：快速排序")])]),t._v(" "),_("li",[_("p",[t._v("不稳定：快速排序，希尔排序，堆排序。")])])]),t._v(" "),_("h2",{attrs:{id:"数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),_("h3",{attrs:{id:"线性结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#线性结构"}},[t._v("#")]),t._v(" 线性结构")]),t._v(" "),_("blockquote",[_("p",[t._v("数据结构中线性结构指的是数据元素之间存在着“一对一”的线性关系的数据结构；\n线性结构包括：数组，链表，队列，栈；")])]),t._v(" "),_("ol",[_("li",[_("p",[t._v("数组使用场景：频繁查询，很少增加和删除的情况。")]),t._v(" "),_("blockquote",[_("p",[t._v("特点：数组中的元素在内存中连续存储的，可以根据是下标快速访问元素，查询速度很快，然而插入和删除时，需要对元素移动空间，比较慢。")])])]),t._v(" "),_("li",[_("p",[t._v("链表使用场景：少查询，需要频繁的插入或删除情况")]),t._v(" "),_("blockquote",[_("p",[t._v("特点：元素可以不连续内存中，是以索引将数据联系起来的，当查询元素的时候需要从头开始查询，所以效率比较低，然而添加和删除的只需要修改索引就可以了")])])]),t._v(" "),_("li",[_("p",[t._v("队列使用场景：多线程阻塞队列管理非常有用")]),t._v(" "),_("blockquote",[_("p",[t._v("特点：先进先出")])])]),t._v(" "),_("li",[_("p",[t._v("栈使用场景：实现递归以及表示式")]),t._v(" "),_("blockquote",[_("p",[t._v("特点：先进后出，类似于箱子")])])])]),t._v(" "),_("div",{staticClass:"tip custom-block"},[_("p",{staticClass:"custom-block-title"},[t._v("数组与链表的区别")]),t._v(" "),_("pre",[_("code",[t._v("- 数组连续，链表不连续（从数据存储形式来说）\n\n- 数组内存静态分配，链表动态分配\n\n- 数组查询复杂度0（1），链表查询复杂度O(n)\n\n- 数组添加或删除，复杂度o（n）,链表添加删除，复杂度O（1）\n\n- 数组从栈中分配内存。链表从堆中分配内存。\n")])])]),t._v(" "),_("h3",{attrs:{id:"非线性结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#非线性结构"}},[t._v("#")]),t._v(" 非线性结构")]),t._v(" "),_("blockquote",[_("p",[t._v("非线性结构包括：树，图，表；")])])])}],!1,null,null,null);v.default=s.exports}}]);