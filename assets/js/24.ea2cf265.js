(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{189:function(t,s,e){"use strict";e.r(s);var r=e(0),a=Object(r.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),e("p",[e("a",{attrs:{href:"http://try.redis.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线redis命令测试"),e("OutboundLink")],1)]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),t._m(23),t._v(" "),e("p",[t._v("Hash 便于表示 objects, HMSET 指令设置 hash 中的多个域，而 HGET 取回单个域。HMGET 和 HGET 类似，返回多列值")]),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),e("p",[t._v("优点：")]),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),e("p",[t._v("当两种方式同时开启时，数据恢复Redis会优先选择AOF恢复。")]),t._v(" "),e("p",[t._v("优点：")]),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),e("p",[t._v("核心：")]),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),e("p",[t._v("优点：")]),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58)])}),[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[this._v("#")]),this._v(" Redis")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[this._v("#")]),this._v(" 简介")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。 支持多种类型的数据结构，如 字符串（strings）， 散列（hashes）， 列表（lists）， 集合（sets）， 有序集合（sorted sets） 与范围查询， bitmaps， hyperloglogs 和 地理空间（geospatial） 索引半径查询。 Redis 内置了 复制（replication），LUA脚本（Lua scripting）， LRU驱动事件（LRU eviction），事务（transactions） 和不同级别的 磁盘持久化（persistence）， 并通过 Redis哨兵（Sentinel）和自动 分区（Cluster）提供高可用性（high availability）。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[this._v("#")]),this._v(" 数据类型")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"字符串（strings）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串（strings）"}},[this._v("#")]),this._v(" 字符串（strings）")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" mykey somevalue\nOK\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" get mykey\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"somevalue"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("当key存在时SET会失败，当key不存在时它只会成功。")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" mykey newval nx\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nil"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("当key不存在时会失败，当key存在时它会成功并更新值。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[this._v(">")]),this._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[this._v("set")]),this._v(" mykey newval xx\nOK\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("原子递增：返回递增后的值")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("提示")]),this._v(" "),s("p",[this._v("key不存在会创建key，如果key存在，但不是integer类型则会报错\n即使多个客户端对同一个key发出INCR命令，也决不会导致竞争的情况。")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" counter "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\nOK\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" incr counter\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" incr counter\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" incrby counter "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("152")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("原子递减：返回递减后的值")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" decr counter\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("151")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" decrby counter "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("GETSET命令，行如其名：他为key设置新值并且返回原值。时间复杂度：O(1)")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[t._v("redis"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" INCR mycounter\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nredis"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" GETSET mycounter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\nredis"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" GET mycounter\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\nredis"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("一次存储或获取多个key对应的值")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mset a "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" c "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\nOK\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mget a b c\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("TYPE命令可以返回key对应的值的存储类型,使用EXISTS命令返回1或0标识给定key的值是否存在")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" mykey x\nOK\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" mykey\nstring\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" del mykey\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" mykey\nnone\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exists")]),t._v(" mykey\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Redis超时:数据在限定时间内存活,TTL命令用来查看key对应的值剩余存活时间。")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" somevalue\nOK\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" expire "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" ex "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nOK\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ttl "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"散列（hashes）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#散列（hashes）"}},[this._v("#")]),this._v(" 散列（hashes）")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hmset "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" username tyw birthyear "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" verified "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nOK\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hget "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" username\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tyw"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hget "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" birthyear\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hgetall "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tyw"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"birthyear"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"verified"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hmget "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" username birthyear "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("no")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("such"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("field\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tyw"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nil"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("HINCRBY")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("小的 hash 被用特殊方式编码，非常节约内存")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hincrby "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" birthyear "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2030")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hdecrby "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" birthyear "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"列表（lists）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表（lists）"}},[this._v("#")]),this._v(" 列表（lists）")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[e("code",[t._v("rpush mylist A")]),t._v(" 右边插入,或者"),e("code",[t._v("rpush mylist A B C 1 'dd'")])]),t._v(" "),e("li",[e("code",[t._v("lpush mylist first")]),t._v(" 左边插入")]),t._v(" "),e("li",[e("code",[t._v("lrange mylist 0 -1")]),t._v(" 列出元素")]),t._v(" "),e("li",[e("code",[t._v("rpop mylist")]),t._v(" 右边删除元素，返回删除的值，左边删除"),e("code",[t._v("lpop mylist")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("提示")]),this._v(" "),s("p",[this._v("-1表示最后一个元素，-2表示list中的倒数第二个元素，以此类推。")]),this._v(" "),s("blockquote",[s("p",[this._v("应用场景： 1.聊天系统2.不同进程间传递消息的队列\n例如在评级系统中，比如社会化新闻网站 reddit.com，你可以把每个新提交的链接添加到一个list，用LRANGE可简单的对结果分页。\n在博客引擎实现中，你可为每篇日志设置一个list，在该list中推入博客评论，等等。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"集合（sets）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合（sets）"}},[this._v("#")]),this._v(" 集合（sets）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("Redis Set 是 String 的无序排列。SADD 指令把新的元素添加到 set 中。对 set 也可做一些其他的操作，比如测试一个给定的元素是否存在，对不同 set 取交集，并集或差，等等。")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sadd myset "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" smembers myset\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[e("p",[t._v("Redis 有检测成员的指令\n"),e("code",[t._v("sismember myset 3")])])]),t._v(" "),e("li",[e("p",[t._v("Sets 适合用于表示对象间的关系。假设我们想要给新闻打上标签\n"),e("code",[t._v("sadd news:1000:tags 1 2 5 66")])])]),t._v(" "),e("li",[e("p",[t._v("SINTER 命令获取不同 set 的交集\n"),e("code",[t._v("sinter tag:1:news tag:2:news tag:10:news tag:27:news")])])]),t._v(" "),e("li",[e("p",[t._v("返回集合中的所有成员\n"),e("code",[t._v("smembers key")])])]),t._v(" "),e("li",[e("p",[t._v("获取集合的成员数\n"),e("code",[t._v("scard key")])])]),t._v(" "),e("li",[e("p",[t._v("返回给定所有集合的差集\n"),e("code",[t._v("sdiff key1 key2")])])]),t._v(" "),e("li",[e("p",[t._v("返回给定所有集合的差集并存储在 dest 中\n"),e("code",[t._v("sdiffstore dest key1 key2")])])]),t._v(" "),e("li",[e("p",[t._v("返回给定所有集合的交集\n"),e("code",[t._v("sinter key1 key2")])])]),t._v(" "),e("li",[e("p",[t._v("返回给定所有集合的交集并存储在 dest 中\n"),e("code",[t._v("sinterstore dest key1 key2")])])]),t._v(" "),e("li",[e("p",[t._v("将 member 元素从 source 集合移动到 dest 集合\n"),e("code",[t._v("smove source dest member")])])]),t._v(" "),e("li",[e("p",[t._v("移除并返回集合中的一个随机元素\n"),e("code",[t._v("spop key")])])]),t._v(" "),e("li",[e("p",[t._v("返回集合中一个或多个随机数\n"),e("code",[t._v("srandmember key count")])])]),t._v(" "),e("li",[e("p",[t._v("移除集合中一个或多个成员\n"),e("code",[t._v("srem key member1 member2")])])]),t._v(" "),e("li",[e("p",[t._v("返回所有给定集合的并集\n"),e("code",[t._v("sunion key1 key2")])])]),t._v(" "),e("li",[e("p",[t._v("所有给定集合的并集存储在 dest 集合中\n"),e("code",[t._v("sunionstore dest key1 key2")])])]),t._v(" "),e("li",[e("p",[t._v("迭代集合中的元素\n"),e("code",[t._v("sscan key cursor [match pattern] [count count]")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"有序集合（sorted-sets）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有序集合（sorted-sets）"}},[this._v("#")]),this._v(" 有序集合（sorted sets）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。 集合中最大的成员数为 2的32次方 -1 (4294967295,40多亿个)")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[e("p",[t._v("向有序集合添加一个或多个成员，或者更新已存在成员的分数\n"),e("code",[t._v("zadd key score1 member1 score2 member2")])])]),t._v(" "),e("li",[e("p",[t._v("获取有序集合的成员数\n"),e("code",[t._v("zcard key")])])]),t._v(" "),e("li",[e("p",[t._v("计算在有序集合中指定区间分数的成员数\n"),e("code",[t._v("zcount key min max")])])]),t._v(" "),e("li",[e("p",[t._v("有序集合中对指定成员的分数加上增量 increment\n"),e("code",[t._v("zincrby key increment member")])])]),t._v(" "),e("li",[e("p",[t._v("计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 key 中\n"),e("code",[t._v("zinterstore destination numkeys key key1 ...")])])]),t._v(" "),e("li",[e("p",[t._v("返回有序集中，成员的分数值\n"),e("code",[t._v("zscore key member")])])]),t._v(" "),e("li",[e("p",[t._v("返回有序集合中指定成员的排名，有序集成员按分数值递减(从大到小)排序\n"),e("code",[t._v("zrevrank key member")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"持久化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持久化"}},[this._v("#")]),this._v(" 持久化")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("持久化就是把内存的数据写到磁盘中去，防止服务宕机了内存数据丢失。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"rdb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rdb"}},[this._v("#")]),this._v(" RDB")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("RDB：Redis DataBase缩写,是Redis默认的持久化方式。按照一定的时间将内存的数据以快照的形式保存到硬盘中，\n对应产生的数据文件为dump.rdb。通过配置文件中的save参数来定义快照的周期。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("只有一个文件 dump.rdb，方便持久化。")]),this._v(" "),s("li",[this._v("容灾性好，一个文件可以保存到安全的磁盘。")]),this._v(" "),s("li",[this._v("性能最大化，fork 子进程来完成写操作，让主进程继续处理命令，所以是 IO 最大化，保证了 redis 的高性能。")]),this._v(" "),s("li",[this._v("相对于数据集大时，启动效率比 AOF 的更高。\n缺点：数据安全性较低，适合数据要求不是很严谨的情况下使用")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"aof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aof"}},[this._v("#")]),this._v(" AOF")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("AOF即Append Only File持久化，则是将Redis执行的每次写命令记录到单独的日志文件中，当重启Redis会重新将持久化的日志中文件恢复数据。")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[t._v("数据安全，aof 持久化可以配置 appendfsync 属性，有 always，每进行一次 命令操作就记录到 aof 文件中一次。")]),t._v(" "),e("li",[t._v("通过 append 模式写文件，即使中途服务器宕机，可以通过 redis-check-aof 工具解决数据一致性问题。")]),t._v(" "),e("li",[t._v("AOF 机制的 rewrite 模式。AOF 文件没被 rewrite 之前（文件过大时会对命令 进行合并重写），可以删除其中的某些命令（比如误操作的 flushall）\n缺点：")]),t._v(" "),e("li",[t._v("AOF 文件比 RDB 文件大，且恢复速度慢")]),t._v(" "),e("li",[t._v("数据集大的时候，启动效率比 rdb 低")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"集群方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集群方案"}},[this._v("#")]),this._v(" 集群方案")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"哨兵模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哨兵模式"}},[this._v("#")]),this._v(" 哨兵模式")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("sentinel用于实现 redis 集群的高可用，本身也是分布式的，作为一个哨兵集群去运行，互相协同工作。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("哨兵至少需要 3 个实例。")]),this._v(" "),s("li",[this._v("哨兵 + redis 主从的部署架构，是不保证数据零丢失的，只能保证 redis 集群的高可用性。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"官方-redis-cluster-方案-推荐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#官方-redis-cluster-方案-推荐"}},[this._v("#")]),this._v(" 官方 Redis Cluster 方案(推荐)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("Redis Cluster采用slot(槽)的概念，一共分成16384个槽。将请求发送到任意节点，接收到请求的节点会将查询请求发送到正确的节点上执行")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[t._v("无中心架构，支持动态扩容，对业务透明")]),t._v(" "),e("li",[t._v("具备Sentinel的监控和自动Failover(故障转移)能力")]),t._v(" "),e("li",[t._v("客户端不需要连接集群所有节点，连接集群中任何一个可用节点即可")]),t._v(" "),e("li",[t._v("高性能，客户端直连redis服务，省去了proxy代理的损耗\n缺点：")]),t._v(" "),e("li",[t._v("运维很复杂，数据迁移需要人工干预")]),t._v(" "),e("li",[t._v("只能使用0号数据库")]),t._v(" "),e("li",[t._v("不支持批量操作(pipeline管道操作)")]),t._v(" "),e("li",[t._v("分布式逻辑和存储模块耦合等")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"缓存雪崩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存雪崩"}},[this._v("#")]),this._v(" 缓存雪崩")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。")]),this._v(" "),s("li",[this._v("一般并发量不是特别多的时候，使用最多的解决方案是加锁排队。")]),this._v(" "),s("li",[this._v("给每一个缓存数据增加相应的缓存标记，记录缓存的是否失效，如果缓存标记失效，则更新数据缓存。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"缓存穿透"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透"}},[this._v("#")]),this._v(" 缓存穿透")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("设置热点数据永远不过期。")]),this._v(" "),s("li",[this._v("加互斥锁")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"缓存与数据库双写时的数据不一致性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存与数据库双写时的数据不一致性"}},[this._v("#")]),this._v(" 缓存与数据库双写时的数据不一致性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("先更新数据库，然后再删除缓存")])])}],!1,null,null,null);s.default=a.exports}}]);